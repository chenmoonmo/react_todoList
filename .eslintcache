[{"/Users/simonli/Desktop/github/todo-list/src/index.tsx":"1","/Users/simonli/Desktop/github/todo-list/src/reportWebVitals.ts":"2","/Users/simonli/Desktop/github/todo-list/src/App.tsx":"3","/Users/simonli/Desktop/github/todo-list/src/components/index.tsx":"4","/Users/simonli/Desktop/github/todo-list/src/components/Input/index.tsx":"5","/Users/simonli/Desktop/github/todo-list/src/components/List/index.tsx":"6","/Users/simonli/Desktop/github/todo-list/src/components/List/item.tsx":"7","/Users/simonli/Desktop/github/todo-list/src/components/typings/index.tsx":"8"},{"size":472,"mtime":1610514595924,"results":"9","hashOfConfig":"10"},{"size":425,"mtime":1610514446913,"results":"11","hashOfConfig":"10"},{"size":173,"mtime":1610516640281,"results":"12","hashOfConfig":"10"},{"size":565,"mtime":1610517674496,"results":"13","hashOfConfig":"10"},{"size":1095,"mtime":1610516921906,"results":"14","hashOfConfig":"10"},{"size":218,"mtime":1610516055479,"results":"15","hashOfConfig":"10"},{"size":158,"mtime":1610515065507,"results":"16","hashOfConfig":"10"},{"size":79,"mtime":1610515227972,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1etwtwm",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/simonli/Desktop/github/todo-list/src/index.tsx",[],"/Users/simonli/Desktop/github/todo-list/src/reportWebVitals.ts",[],"/Users/simonli/Desktop/github/todo-list/src/App.tsx",[],"/Users/simonli/Desktop/github/todo-list/src/components/index.tsx",[],"/Users/simonli/Desktop/github/todo-list/src/components/Input/index.tsx",["36"],"// useRef 获取dom\nimport React, { FC, ReactElement, useRef } from 'react'\nimport { ITodo } from '../typings'\n\n// interface 接口\ninterface Iprops {\n  addTodo: (todo: ITodo) => void\n  todoList: ITodo[]\n}\n\n// 变量:FC 函数类型 参数:Iprops接口类型 返回值:ReactElement JSX类型\nconst TdInput: FC<Iprops> = ({ addTodo, todoList }): ReactElement => {\n  // useRef固定写法 元素使用 ref={inputRef} 绑定\n  const inputRef = useRef<HTMLInputElement>(null)\n  const addItem = (): void => {\n    const val: string = inputRef.current!.value.trim()\n    if (val.length) {\n      const isExist = todoList.find((todo: ITodo) => todo.content == val)\n      if (isExist) {\n        alert('已存在该项')\n        return\n      }\n      addTodo({\n        id: new Date().getTime(),\n        content: val,\n        completed: false,\n      })\n\n      inputRef.current!.value = ''\n    }\n  }\n\n  return (\n    <div className=\"todo_input\">\n      <input type=\"text\" placeholder=\"请输入代办项\" ref={inputRef} />\n      <button onClick={addItem}>增加</button>\n    </div>\n  )\n}\n\nexport default TdInput\n",["37","38"],"/Users/simonli/Desktop/github/todo-list/src/components/List/index.tsx",[],"/Users/simonli/Desktop/github/todo-list/src/components/List/item.tsx",[],"/Users/simonli/Desktop/github/todo-list/src/components/typings/index.tsx",[],{"ruleId":"39","severity":1,"message":"40","line":18,"column":67,"nodeType":"41","messageId":"42","endLine":18,"endColumn":69},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-native-reassign",["47"],"no-negated-in-lhs",["48"],"no-global-assign","no-unsafe-negation"]